import React, { useState, useEffect } from 'react';
import prizeApi from '../../services/prize.service';
import "./PrizeDeleteForm.css";

const PrizeDeleteForm = ({ prizeId, onSuccess, onCancel }) => {
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState('');
    const [prize, setPrize] = useState(null);

    useEffect(() => {
        if (prizeId) {
            fetchPrize();
        }
    }, [prizeId]);

    const fetchPrize = async () => {
        try {
            setLoading(true);
            const data = await prizeApi.getById(prizeId);
            setPrize(data);
        } catch (err) {
            setError(err.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–∑');
            console.error(err);
        } finally {
            setLoading(false);
        }
    };

    const handleDelete = async () => {
        if (!prizeId) return;

        try {
            setLoading(true);
            await prizeApi.delete(prizeId);
            onSuccess();
        } catch (err) {
            setError(err.response?.data?.detail || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–∏–∑–∞');
            console.error(err);
        } finally {
            setLoading(false);
        }
    };

    if (loading && !prize) {
        return (
            <div className="prize-modal-overlay">
                <div className="prize-modal loading">
                    <div className="spinner"></div>
                    <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–∞...</p>
                </div>
            </div>
        );
    }

    return (
        <div className="prize-modal-overlay" onClick={onCancel}>
            <div className="prize-modal" onClick={(e) => e.stopPropagation()}>
                <div className="modal-header">
                    <h3>ü¶â –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–∞</h3>
                    <button className="modal-close" onClick={onCancel} aria-label="–ó–∞–∫—Ä—ã—Ç—å">
                        ‚úñ
                    </button>
                </div>

                <div className="modal-body">
                    {error && (
                        <div className="alert-error">
                            <span>‚ö†Ô∏è</span> {error}
                        </div>
                    )}

                    {prize ? (
                        <div className="prize-delete-card">
                            <div className="prize-field">
                                <span className="field-label">–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                                <span className="field-value">{prize.name}</span>
                            </div>
                            <div className="prize-field">
                                <span className="field-label">–®–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è:</span>
                                <span className="field-value">{prize.weight}/10</span>
                            </div>
                            <div className="prize-field">
                                <span className="field-label">–°—Ç–∞—Ç—É—Å:</span>
                                <span className={`field-value status ${prize.isActive ? 'active' : 'inactive'}`}>
                                    {prize.isActive ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                                </span>
                            </div>
                        </div>
                    ) : (
                        <div className="empty-state">
                            <p>–ü—Ä–∏–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>
                            <div className="owl-icon">ü¶â</div>
                        </div>
                    )}

                    <div className="confirm-section">
                        <p className="confirm-text">
                            ‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ <strong>–Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å</strong>.<br />
                        </p>
                    </div>
                </div>

                <div className="modal-footer">
                    <button
                        className="btn-cancel"
                        onClick={onCancel}
                        disabled={loading}
                    >
                        ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è
                    </button>
                    <button
                        className="btn-delete"
                        onClick={handleDelete}
                        disabled={loading}
                    >
                        {loading ? (
                            <>
                                <div className="spinner small"></div>
                                –£–¥–∞–ª–µ–Ω–∏–µ...
                            </>
                        ) : (
                            'üî• –£–¥–∞–ª–∏—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞'
                        )}
                    </button>
                </div>
            </div>
        </div>
    );
};

export default PrizeDeleteForm;